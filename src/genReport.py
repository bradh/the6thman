from datetime import datetime

def genUid(cs, time):
    """
    Generates a uid for the point. These uid are not to any standard and is pretty gross, so feel free to fix.

    Args:
    cs (str): The callsign/name of the cliet making the report. This is set through ATAK settings
    time (time): The raw time value for when the report was generated. This high precision and should be unique for these reports

    Returns:
    (str): The 'uid' made up of the callsign and current time
    """
    return f'{self.callsign}{self.realTime}'

class newReport:
    """
    Class for creating report object with the required properties to generate the message xml.
    """
    def __init__(self, repCallsign, team):
        timeNow = datetime.now()
        self.timeStamp = timeNow.stftime('%d %H%M %b%y').upper()
        self.realTime = timeNow
        self.callsign = repCallsign
        self.teamName = team
        self.uid = genUid(repCallsign, timeNow)
        return

    def setAssessment(self, assessment):
        """
        Method to write AI assessment as report object property. This should probably be broken down into multiple properties
        once we have nailed down what that will look like.

        Args:
        assessment (str): The assessment generated by the AI
        """
        self.assess = assessment
        return